// Mocks generated by Mockito 5.4.2 from annotations
// in verbaquiz/test/application/main_screen/main_screen_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:verbaquiz/domain/model/objects/question.dart' as _i4;
import 'package:verbaquiz/domain/services/question_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [QuestionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionService extends _i1.Mock implements _i2.QuestionService {
  MockQuestionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Question>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Question>>.value(<_i4.Question>[]),
      ) as _i3.Future<List<_i4.Question>>);
  @override
  _i3.Future<List<_i4.Question>> readFemaleQuestions() => (super.noSuchMethod(
        Invocation.method(
          #readFemaleQuestions,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Question>>.value(<_i4.Question>[]),
      ) as _i3.Future<List<_i4.Question>>);
  @override
  _i3.Future<List<_i4.Question>> readGenderlessQuestions() =>
      (super.noSuchMethod(
        Invocation.method(
          #readGenderlessQuestions,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Question>>.value(<_i4.Question>[]),
      ) as _i3.Future<List<_i4.Question>>);
  @override
  _i3.Future<List<_i4.Question>> searchQuestions({required String? name}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchQuestions,
          [],
          {#name: name},
        ),
        returnValue: _i3.Future<List<_i4.Question>>.value(<_i4.Question>[]),
      ) as _i3.Future<List<_i4.Question>>);
  @override
  _i3.Future<List<_i4.Question>> readMaleQuestions() => (super.noSuchMethod(
        Invocation.method(
          #readMaleQuestions,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Question>>.value(<_i4.Question>[]),
      ) as _i3.Future<List<_i4.Question>>);
  @override
  _i3.Future<List<_i4.Question>> readUnknownQuestions() => (super.noSuchMethod(
        Invocation.method(
          #readUnknownQuestions,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Question>>.value(<_i4.Question>[]),
      ) as _i3.Future<List<_i4.Question>>);
}
